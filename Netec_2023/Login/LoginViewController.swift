//
//  LoginViewController.swift
//  Netec_2023
//
//  Created Administrator on 21/06/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginViewController: UIViewController {

    //MARK: - Protocol Properties
	var presenter: LoginPresenterProtocol?

    //MARK: - Properties
    private var labelLogin: UILabel = {
        let label = UILabel()
        label.text = "Empleados y Cobranza"
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    private var imagenViewLogo: UIImageView = {
        let imagen = UIImageView()
        imagen.image = UIImage(systemName: "globe.americas.fill")
        imagen.translatesAutoresizingMaskIntoConstraints = false
        return imagen
    }()
    
    private var textFieldUser: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Ingresa tu usuario"
        textField.layer.cornerRadius = 10
        textField.layer.backgroundColor = UIColor.white.cgColor
        textField.layer.borderWidth = 1
        textField.layer.borderColor = UIColor.gray.cgColor
        textField.translatesAutoresizingMaskIntoConstraints = false
        return textField
    }()
    
    private var textFieldPassword: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Ingresa tu contrasena"
        textField.layer.cornerRadius = 10
        textField.layer.backgroundColor = UIColor.white.cgColor
        textField.layer.borderWidth = 1
        textField.layer.borderColor = UIColor.gray.cgColor
        textField.translatesAutoresizingMaskIntoConstraints = false
        return textField
    }()
    
    private var buttonLogin: UIButton = {
        let button = UIButton()
        button.setTitle("Login", for: .normal)
        button.layer.cornerRadius = 10
        button.backgroundColor = UIColor.systemGreen
        button.addTarget(self, action: #selector(login), for: .touchUpInside)
        return button
    }()
    
    private var buttonResgister: UIButton = {
        let button = UIButton()
        button.setTitle("Registro", for: .normal)
        button.backgroundColor = UIColor.systemGreen
        button.layer.cornerRadius = 10
        button.translatesAutoresizingMaskIntoConstraints = false
        button.addTarget(self, action: #selector(register), for: .touchUpInside)
        return button
    }()
    
    private lazy var buttonPassword: UIButton = {
        let button = UIButton()
        button.setTitle("Recuperar contrasena", for: .normal)
        button.setTitleColor(UIColor.systemGreen, for: .normal)
        button.translatesAutoresizingMaskIntoConstraints = false
        button.addTarget(self, action: #selector(recuperarPassword), for: .touchUpInside)
        return button
    }()
    
 
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .systemGray5
        title = "Login"
        configUI()
    }
    
    //MARK: - Methods
    private func configUI(){
        view.addSubview(labelLogin)
        view.addSubview(imagenViewLogo)
        view.addSubview(textFieldUser)
        view.addSubview(textFieldPassword)
        view.addSubview(buttonLogin)
        view.addSubview(buttonResgister)
        view.addSubview(buttonPassword)
        
        NSLayoutConstraint.activate([
            labelLogin.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 10),
            labelLogin.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            
            imagenViewLogo.topAnchor.constraint(equalTo: labelLogin.topAnchor, constant: 100),
            imagenViewLogo.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            imagenViewLogo.widthAnchor.constraint(equalToConstant: 200),
            imagenViewLogo.heightAnchor.constraint(equalToConstant: 200),
            
            textFieldUser.topAnchor.constraint(equalTo: imagenViewLogo.topAnchor, constant: 230),
            textFieldUser.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            textFieldUser.widthAnchor.constraint(equalToConstant: 300),
            textFieldUser.heightAnchor.constraint(equalToConstant: 35),
            
            textFieldPassword.topAnchor.constraint(equalTo: textFieldUser.topAnchor, constant: 50),
            textFieldPassword.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            textFieldPassword.widthAnchor.constraint(equalToConstant: 300),
            textFieldPassword.heightAnchor.constraint(equalToConstant: 35),
        
        ])
        
        buttonLogin.addAnchorsAndCenter(centerX: true, centerY: false, width: width/2, height: 30, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: textFieldPassword)
        buttonResgister.addAnchorsAndCenter(centerX: true, centerY: false, width: width/2, height: 30, left: nil, top: 15, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonLogin)
        buttonPassword.addAnchorsAndCenter(centerX: true, centerY: false, width: width/2, height: 30, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: buttonResgister)
        
    }
}

//MARK: - View Methods
extension LoginViewController: LoginViewProtocol {
    @objc private func register(){
        presenter?.register()
        print("Registro")
    }
    @objc private func login(){
        print("login")
        presenter?.login()
    }
    @objc private func recuperarPassword(){
        print("recuperarPassword")
        presenter?.password()
    }
}

//MARK: - Private functions
extension LoginViewController {
    
  
 
}
