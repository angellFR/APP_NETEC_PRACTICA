//
//  RegistroViewController.swift
//  Netec_2023
//
//  Created Administrator on 22/06/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class RegistroViewController: UIViewController {

    //MARK: - Protocol Properties
	var presenter: RegistroPresenterProtocol?

    //MARK: - Properties
    private var imagenLogo: UIImageView = {
        let image = UIImageView()
        image.image = UIImage(systemName: "globe.americas.fill")
        image.translatesAutoresizingMaskIntoConstraints = false
        return image
    }()
    
    private var textFieldName: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Nombre"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldPassword: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Contrasena"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldPasswordConfirm: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Confirmar Contrasena"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldEmail: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Correo electronico"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldNacimiento: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Fecha de Nacimiento"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldTel: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Telefono"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var textFieldNumberEmpled: UITextField = {
        let textField = UITextField()
        textField.placeholder = "  Numero de empleado"
        textField.layer.cornerRadius = 10
        textField.layer.borderWidth = 1
        textField.layer.backgroundColor = UIColor.white.cgColor
        return textField
    }()
    
    private var buttonRegis: UIButton = {
        let button = UIButton()
        button.setTitle("Enviar", for: .normal)
        button.setTitleColor(UIColor.white, for: .normal)
        button.layer.cornerRadius = 10
        button.backgroundColor = .systemGreen
        return button
    }()
    
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        title = "Registro"
        configUI()
    }
    
    //MARK: - Methods
    private func configUI(){
        view.addSubview(imagenLogo)
        view.addSubview(textFieldName)
        view.addSubview(textFieldPassword)
        view.addSubview(textFieldPasswordConfirm)
        view.addSubview(textFieldEmail)
        view.addSubview(textFieldNacimiento)
        view.addSubview(textFieldTel)
        view.addSubview(textFieldNumberEmpled)
        view.addSubview(buttonRegis)
        
        NSLayoutConstraint.activate([
            imagenLogo.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 20),
            imagenLogo.widthAnchor.constraint(equalToConstant: 200),
            imagenLogo.heightAnchor.constraint(equalToConstant: 200),
            imagenLogo.centerXAnchor.constraint(equalTo: view.centerXAnchor)
        ])
        textFieldName.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 15, right: 50, bottom: nil, withAnchor: .top, relativeToView: imagenLogo)
        textFieldPassword.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldName)
        textFieldPasswordConfirm.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldPassword)
        textFieldEmail.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldPasswordConfirm)
        textFieldNacimiento.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldEmail)
        textFieldTel.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldNacimiento)
        textFieldNumberEmpled.addAnchorsAndCenter(centerX: true, centerY: false, width: nil, height: 30, left: 50, top: 10, right: 50, bottom: nil, withAnchor: .top, relativeToView: textFieldTel)
        buttonRegis.addAnchorsAndCenter(centerX: true, centerY: false, width: width/2, height: 40, left: nil, top: 20, right: nil, bottom: nil, withAnchor: .top, relativeToView: textFieldNumberEmpled)
    }
}

//MARK: - View Methods
extension RegistroViewController: RegistroViewProtocol {
    
}

//MARK: - Private functions
extension RegistroViewController {
    
}
